<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.4.0" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Original\src\Framework\Core\DotVVM.Core.csproj" PrivateAssets="all" GeneratePathProperty="true" />
    <ProjectReference Include="..\Original\src\Framework\Framework\DotVVM.Framework.csproj" PrivateAssets="all" GeneratePathProperty="true" />
  </ItemGroup>

  <!-- https://github.com/dotnet/roslyn/discussions/47517 -->
  <PropertyGroup>
    <GetTargetPathDependsOn>$(GetTargetPathDependsOn);GetDependencyTargetPaths</GetTargetPathDependsOn>
  </PropertyGroup>

  <Target Name="GetDependencyTargetPaths">
    <ItemGroup>
      <!-- Newtonsoft.json will generate a path property because we did the GeneratePathProperty="true"-->
      <TargetPathWithTargetPlatformMoniker Include="$(PKGNewtonsoft_Json)\lib\netstandard1.3\*.dll" IncludeRuntimeDependency="false" />

      <!-- our local project will not generate path variable so we need to find it from it's own build output-->
      <!-- I used $(OutputPath) variable because the dependecy has the exact TFM and configuration as the generator 
               you might need to add configuration manually -->
      <!--TargetPathWithTargetPlatformMoniker Include="..\DependencyB\$(OutputPath)\*.dll" IncludeRuntimeDependency="false" /-->
    </ItemGroup>
  </Target>

</Project>
